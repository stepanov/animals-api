openapi: 3.0.0
info:
  title: Animals API
  description: Animals API definition
  version: 1.0.0

servers:
  - url: https://api.animals.com/v1
    description: Main production server
  - url: https://api-staging.animals.com/v1
    description: Main staging server
  - url: https://api-dev.animals.com/v1
    description: Main dev server

paths:
  /owners:
    get:
      tags:
        - Animal Owners
      summary: Return list of owners
      description: List of animals owners
      responses:
        '200':
          description: A list of animals owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnerModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    post:
      tags:
        - Animal Owners
      summary: Create a new owner
      description: Create a new animals owner in the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
          
  /owners/{ownerId}:
    get:
      tags:
        - Animal Owners
      summary: Get owner by ID
      parameters:
        - $ref: '#/parameters/OwnerInputParameter'
      responses:
        '200':
          description: Owner details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/OwnerModel'
                  - $ref: '#/components/schemas/OwnerAnimalModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    put:
      tags:
        - Animal Owners
      summary: Update a specific owner
      parameters:
        - $ref: '#/parameters/OwnerInputParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    delete:
      tags:
        - Animal Owners
      summary: Remove animal owner
      parameters:
        - $ref: '#/parameters/OwnerInputParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
  /shows:
    get:
      tags:
        - Shows
      summary: Return list of the shows
      description: List of animals shows
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShowModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    post:
      tags:
        - Shows
      summary: Create a new show
      description: Create a new show in the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
  /shows/{showId}:
    get:
      tags:
        - Shows
      summary: Get information about specified show
      description: Fetching an detailed inforamtion about show with specified ID
      parameters:
        - $ref: '#/parameters/ShowInputParameter'
      responses:
        '200':
          description: Show details
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ShowModel'
                  - $ref: '#/components/schemas/ShowAnimalModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    put:
      tags:
        - Shows
      summary: Update a specific show
      parameters:
        - $ref: '#/parameters/ShowInputParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
        
    delete:
      tags:
        - Shows
      summary: Delete the show by its ID
      description: Delete show by ID
      parameters:
        - $ref: '#/parameters/ShowInputParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
  /animals:
    get:
      tags:
        - Animals
      summary: Get a list of animals
      responses:
        '200':
          description: A list of animals owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    post:
      tags:
        - Animals
      summary: Add a new animal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
  
  /animals/{animalId}:
    get:
      tags:
        - Animals
      summary: Get an animal by ID
      parameters:
        - $ref: '#/parameters/AnimalInputParameter'
      responses:
        '200':
          description: A list of animals owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimalModel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    put:
      tags:
        - Animals
      summary: Add a new animal
      parameters:
        - $ref: '#/parameters/AnimalInputParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnimalBaseModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
    delete:
      tags:
        - Animals
      summary: Delete the animal by its ID
      description: Delete animal by ID
      parameters:
        - $ref: '#/parameters/AnimalInputParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          $ref: '#/components/responses/DefaultError'
components:
  schemas:
    BaseModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Entity ID
          example: 123
        created:
          type: string
          format: datetime
          description: Entity creation date and time
          example: 2021-09-01 11:00:00
        deleted:
          type: boolean
          description: Entity delete flag
          example: false
        user_id:
          type: integer
          format: int64
          description: Entity creator ID
          example: 42
    OwnerBaseModel:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NameDef'
        email:
          type: string
          description: Owner's email address
          example: owner@test.com
        phone:
          type: string
          description: Owner's phone number
          example: +123321456
    OwnerModel:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - $ref: '#/components/schemas/OwnerBaseModel'
    OwnerAnimalModel:
      allOf:
        - $ref: '#/components/schemas/OwnerModel'
        - type: object
          properties:
            animals:
              type: array
              items:
                type: integer
    ShowModel:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - $ref: '#/components/schemas/ShowBaseModel'
    ShowBaseModel:
      type: object
      properties:
        title:
          type: string
          description: Title of the show
          example: Super show number 1
        description:
          type: string
          description: Description of the show
          example: The number one show in the world!
        show_date:          
          type: string
          format: date
          example: 2021-12-10
          description: Date of the show
    ShowAnimalModel:
      allOf:
        - $ref: '#/components/schemas/ShowModel'
        - type: object
          properties:
            animals:
              type: array
              items:
                type: integer
    AnimalModel:
      allOf:
        - $ref: '#/components/schemas/BaseModel'
        - $ref: '#/components/schemas/AnimalBaseModel'
    AnimalBaseModel:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NameDef'
        animal_type: 
          type: string
        date_of_birth:
          type: string
          format: date
    AnimalParentModel:
      allOf:
        - $ref: '#/components/schemas/AnimalModel'
        - type: object
          properties:
            parents:
              type: array
              items:
                type: integer
    AnimalChildModel:
      allOf:
        - $ref: '#/components/schemas/AnimalModel'
        - type: object
          properties:
            children:
              type: array
              items:
                type: integer
    AnimalShowModel:
      allOf:
        - $ref: '#/components/schemas/AnimalModel'
        - type: object
          properties:
            shows:
              type: array
              items:
                type: integer
    AnimalOwnerModel:
      allOf:
        - $ref: '#/components/schemas/AnimalModel'
        - type: object
          properties:
            owners:
              type: array
              items:
                type: integer
    NameDef:
      type: string
      description: Entity name
      example: John show
    ErrorDef:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 1
          description: Error code
        message:
          type: string
          example: Unknown parameter
          description: Error message
    CreationResult:
      type: object
      properties:
        result:
          type: integer
          format: int64
          example: 12
          description: created entity ID
    DeleteResponse:
      type: object
      properties:
        result:
          type: string
          example: OK
          description: Delete entity result
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorDef"
    ServerError:
      description: Server error
      content:
        applcation/json:
          schema:
            $ref: '#/components/schemas/ErrorDef'
    DefaultError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDef'
      
parameters:  
  OwnerInputParameter:
    name: ownerId
    in: path
    required: true
    description: Owner ID
    type: integer
    format: int64
    minimum: 1
    example: 123456
  ShowInputParameter:
    name: showId
    in: path
    required: true
    description: Show ID
    type: integer
    format: int64
    minimum: 1
    example: 123456
  AnimalInputParameter:
    name: animalId
    in: path
    required: true
    description: Animal ID
    type: integer
    format: int64
    minimum: 1
    example: 123456
